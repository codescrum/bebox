require 'capistrano/ext/multistage'

set :application, "pname"
set :stages, ["vagrant", "production"]
set :default_stage, 'vagrant'
set :use_sudo, false
set(:apt_dependencies) { ["git-core", "build-essential", "curl"] }

set :keep_releases, 5
set :deploy_via, :remote_cache
set(:deploy_to) { "/home/#{user}/#{application}/code" }
# Relative puppet deb location
set(:relative_puppet_deb_location){'puppet/lib/deb/puppet_3.6.0/'}
# Remote location of the puppet_repo
set(:remote_puppet_repo_location) { "#{current_path}/#{relative_puppet_deb_location}" }

after 'deploy:prepare', 'deploy:setup', 'deploy'

namespace :deploy do

  desc 'Installs tools and required dependencies in the remote machine'
  namespace :prepare do

    desc 'Install dependencies and command line tools to operate correctly'
    task :default do
      ubuntu.setup
      dependencies
    end

    desc 'Install libraries'
    task :dependencies do
      run "#{sudo} aptitude update"
      run "#{sudo} aptitude -y install #{apt_dependencies.join(' ')}"
    end

    namespace :ubuntu do
      desc 'Install dependencies and command line tools to opperate correctly'
      task :setup do
        full_upgrade
        set_fqdn
      end

      desc 'Upgrade system'
      task :full_upgrade do
        run "#{sudo} apt-get update"
        run "#{sudo} apt-get -y install aptitude"
        run "#{sudo} aptitude -y full-upgrade"
      end

      desc "Sets the boxes' fully qualified domain name (fqdn), through the 'hostname' command"
      task :set_fqdn do
        run('hostname') do |ch, stream, out|
          if ch[:server].host.strip == out.strip
            puts "The #{ch[:server]} server hostname is configured properly"
          else
            run "#{sudo} hostname #{ch[:server].host}", hosts: ch[:server]
          end
        end
      end
    end
  end
end

namespace :puppet do

  namespace :install do

    desc 'Install puppet on the remote machine (free-standalone) [including dependencies]'
    task :default do
      run "#{sudo} dpkg -i #{remote_puppet_repo_location}*.deb"
    end
  end
end